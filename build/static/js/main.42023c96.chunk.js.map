{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","title","people","map","person","lastIndexOf","keys","Object","key","index","lastMessageKey","isMyMessage","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","e","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42023c96.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const {chatId, creds} = props;\r\n\r\n    const handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, { text });\r\n\r\n        setValue(\"\");\r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) =>{\r\n        sendMessage(creds, chatId, {files: event.target.files, text: \"\"})\r\n    }\r\n\r\n    return(\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\"/>\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display:\"none\"}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\"/>\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default MessageForm;","import React from \"react\";\r\n\r\nconst MyMessage = ({message}) => {\r\n    \r\n    if(message?.attachments?.length > 0){\r\n        return(\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{float: \"right\"}}\r\n            />\r\n        );\r\n    }\r\n    \r\n    return(\r\n        <div className=\"message\" style={{float: \"right\", marginRight: \"18px\", color: \"white\", backgroundColor:\"#01a3a4\"}}>\r\n            {message.text}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyMessage;","import React from \"react\";\r\n\r\nconst TheirMessage = ({lastMessage, message}) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n    return(\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n            {message?.attachments?.length > 0\r\n                ? (\r\n                    <img \r\n                        src={message.attachments[0].file}\r\n                        alt=\"message-attachment\"\r\n                        className=\"message-image\"\r\n                        style={{marginLeft: isFirstMessageByUser? \"4px\" : \"48px\"}}\r\n                    />\r\n                ) : (\r\n                        <div className=\"message\" style={{float: \"left\", backgroundColor:\"#10ac84\", color: \"white\", marginLeft: isFirstMessageByUser? \"4px\" : \"48px\"}}>\r\n                            {message.text}\r\n                        </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TheirMessage;","import React from \"react\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props)=> {\r\n\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index)=> person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? \"right\" : \"left\",\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{width: \"100%\"}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage \r\n                            ? <MyMessage message={message} /> \r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    {/* <div className=\"read-receipts\" style={{marginRight: isMyMessage ? \"18px\" : \"0px\", marginLeft: isMyMessage ? \"0px\" : \"68px\"}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div> */}\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    if(!chat) return \"...Loading\";\r\n\r\n    return(\r\n        <div className=\"chat-feed\"  style={{\"background-color\": \"#222f3e\"}}>\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\" style={{\"color\": \"#c8d6e5\"}}>{chat.title}</div>\r\n                <div className=\"chat-subtitle\" style={{\"color\": \"#00d2d3\"}}>\r\n                    {chat.people.map((person) => \r\n                     chat.people.lastIndexOf(person) === chat.people.length-1 \r\n                     ? `${person.person.username}` \r\n                     : `${person.person.username +\", \"}`)};\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height: \"100px\"}}/>\r\n            <div className=\"message-form-container\" style={{\"background-color\": \"#222f3e\"}}>\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ChatFeed;","import react, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    \r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const authObject = {\"Project-ID\": \"9cc84124-72b3-437c-9096-52094018f81d\", \"User-Name\": username, \"User-Secret\": password}\r\n\r\n        try {\r\n            await axios.get(\"https://api.chatengine.io/chats\", {headers: authObject});\r\n\r\n            localStorage.setItem(\"username\", username);\r\n            localStorage.setItem(\"password\", password);\r\n\r\n            window.location.reload();\r\n\r\n        } catch (error) {\r\n            setError(\"Incorrect credentials, try again.\")\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\"></h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e)=>setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LoginForm;","import { ChatEngine } from \"react-chat-engine\";\r\nimport ChatFeed from \"./components/ChatFeed\";\r\nimport LoginForm from \"./components/LoginForm\"\r\nimport \"./App.css\";\r\n\r\n\r\nconst App = () =>{\r\n\r\n    if(!localStorage.getItem(\"username\")) return <LoginForm/>\r\n\r\n    return(\r\n        <ChatEngine \r\n            height=\"100vh\"\r\n            projectID=\"9cc84124-72b3-437c-9096-52094018f81d\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps}/>}\r\n        />\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById(\"root\"));"],"sourceRoot":""}