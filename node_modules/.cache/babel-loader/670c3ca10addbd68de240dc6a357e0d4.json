{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\davidpd2690.github.io\\\\chatapp\\\\src\\\\components\\\\ChatFeed.jsx\";\nimport React from \"react\";\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) => {\n    return chat.people.map((person, index) => {\n      var _person$person;\n\n      return person.last_read === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"read-receipt\",\n        style: {\n          float: isMyMessage ? \"right\" : \"left\",\n          backgroundImage: `url(${person === null || person === void 0 ? void 0 : (_person$person = person.person) === null || _person$person === void 0 ? void 0 : _person$person.avatar})`\n        }\n      }, `read_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessage: messages[lastMessageKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? \"18px\" : \"0px\",\n            marginLeft: isMyMessage ? \"0px\" : \"68px\"\n          },\n          children: renderReadReceipts(message, isMyMessage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  if (!chat) return \"...Loading\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: [chat.people.map(person => `${person.person.username}`), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), renderMessages(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: /*#__PURE__*/_jsxDEV(MessageForm, { ...props,\n        chatId: activeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["D:/Web Development/davidpd2690.github.io/chatapp/src/components/ChatFeed.jsx"],"names":["React","MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","renderMessages","keys","Object","key","lastMessageKey","sender","username","width","marginRight","marginLeft","title","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props)=> {\r\n\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index)=> person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? \"right\" : \"left\",\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{width: \"100%\"}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage \r\n                            ? <MyMessage message={message} /> \r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage ? \"18px\" : \"0px\", marginLeft: isMyMessage ? \"0px\" : \"68px\"}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    if(!chat) return \"...Loading\";\r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.username}`)};\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height: \"100px\"}}/>\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}