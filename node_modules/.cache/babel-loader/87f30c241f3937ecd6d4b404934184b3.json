{"ast":null,"code":"import _objectSpread from\"D:/Web Development/davidpd2690.github.io/chat-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import MessageForm from\"./MessageForm\";import MyMessage from\"./MyMessage\";import TheirMessage from\"./TheirMessage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatFeed=function ChatFeed(props){var chats=props.chats,activeChat=props.activeChat,userName=props.userName,messages=props.messages;var chat=chats&&chats[activeChat];var renderReadReceipts=function renderReadReceipts(message,isMyMessage){return chat.people.map(function(person,index){var _person$person;return person.last_read===message.id&&/*#__PURE__*/_jsx(\"div\",{className:\"read-receipt\",style:{float:isMyMessage?\"right\":\"left\",backgroundImage:\"url(\".concat(person===null||person===void 0?void 0:(_person$person=person.person)===null||_person$person===void 0?void 0:_person$person.avatar,\")\")}},\"read_\".concat(index));});};var renderMessages=function renderMessages(){var keys=Object.keys(messages);return keys.map(function(key,index){var message=messages[key];var lastMessageKey=index===0?null:keys[index-1];var isMyMessage=userName===message.sender.username;return/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"message-block\",children:isMyMessage?/*#__PURE__*/_jsx(MyMessage,{message:message}):/*#__PURE__*/_jsx(TheirMessage,{message:message,lastMessage:messages[lastMessageKey]})})},\"msg_\".concat(index));});};if(!chat)return\"...Loading\";return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-feed\",style:{\"background-color\":\"#222f3e\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-title\",style:{\"color\":\"#c8d6e5\"},children:chat.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-subtitle\",style:{\"color\":\"#00d2d3\"},children:[chat.people.map(function(person){return chat.people.lastIndexOf(person)===chat.people.length-1?\"\".concat(person.person.username):\"\".concat(person.person.username+\", \");}),\";\"]})]}),renderMessages(),/*#__PURE__*/_jsx(\"div\",{style:{height:\"100px\"}}),/*#__PURE__*/_jsx(\"div\",{className:\"message-form-container\",style:{\"background-color\":\"#222f3e\"},children:/*#__PURE__*/_jsx(MessageForm,_objectSpread(_objectSpread({},props),{},{chatId:activeChat}))})]});};export default ChatFeed;","map":{"version":3,"sources":["D:/Web Development/davidpd2690.github.io/chat-app/src/components/ChatFeed.jsx"],"names":["React","MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderReadReceipts","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","renderMessages","keys","Object","key","lastMessageKey","sender","username","width","title","lastIndexOf","length","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props)=> {\r\n\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index)=> person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? \"right\" : \"left\",\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{width: \"100%\"}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage \r\n                            ? <MyMessage message={message} /> \r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    {/* <div className=\"read-receipts\" style={{marginRight: isMyMessage ? \"18px\" : \"0px\", marginLeft: isMyMessage ? \"0px\" : \"68px\"}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div> */}\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n\r\n    if(!chat) return \"...Loading\";\r\n\r\n    return(\r\n        <div className=\"chat-feed\"  style={{\"background-color\": \"#222f3e\"}}>\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\" style={{\"color\": \"#c8d6e5\"}}>{chat.title}</div>\r\n                <div className=\"chat-subtitle\" style={{\"color\": \"#00d2d3\"}}>\r\n                    {chat.people.map((person) => \r\n                     chat.people.lastIndexOf(person) === chat.people.length-1 \r\n                     ? `${person.person.username}` \r\n                     : `${person.person.username +\", \"}`)};\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height: \"100px\"}}/>\r\n            <div className=\"message-form-container\" style={{\"background-color\": \"#222f3e\"}}>\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ChatFeed;"]},"metadata":{},"sourceType":"module"}